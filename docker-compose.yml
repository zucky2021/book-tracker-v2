services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app # フロントエンドのソースコードの変更をコンテナに即時反映
      - /app/node_modules
    environment: # Dockerコンテナ内で利用可能な環境変数を設定する
      - NODE_ENV=development
      - FAST_REFRESH=true
      - VITE_ENDPOINT=$ENDPOINT
      - VITE_API_VERSION=$API_VERSION
    command: npm run dev # アプリケーションの実行コマンドを指定する
    ports:
      - "3000:3000" # [ホストのポート番号]：[コンテナのポート番号]
    depends_on:
      - backend # backendサービスが起動した後にこのサービスを起動する
    restart: always # コンテナが停止した場合に自動的に再起動
    stdin_open: true
    tty: true

  backend:
    build: # backend の Dockerfile があるパス
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app # バックエンドのソースコードの変更をコンテナに即時反映
    ports:
      - "8080:8080" # [ホストのポート番号]：[コンテナのポート番号]
    environment: # サービスのコンテナに環境変数を設定
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      - db # 依存関係の定義
    restart: always # コンテナが停止した場合に自動的に再起動

  db:
    image: mysql:8.4
    volumes: # コンテナの外部に保管する
      - mysql-data-dev:/var/lib/mysql
    environment: # サービスのコンテナに環境変数を設定
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD_DEV}
      MYSQL_DATABASE: ${MYSQL_DATABASE_DEV}
      MYSQL_USER: ${MYSQL_USER_DEV}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD_DEV}
    ports:
      - "3306:3306"
    restart: always # コンテナが停止した場合に自動的に再起動

volumes:
  mysql-data-dev: # db の volume の名前を定義
